// Code generated by go-vue-ssr: https://github.com/zbysir/go-vue-ssr
// src_hash:4798524e3863f32639a6451054f9f465

package main

import (
	"strings"
)

type _ strings.Builder

func xx_page(r *Render, w Writer, options *Options) {
	scope := extendScope(r.Global, options.Props)
	options.Directives.Exec(r, options)
	_ = scope
	_template(r, w, &Options{
		Slots: map[string]NamedSlotFunc{"default": func(w Writer, props Props) {
			w.WriteString("<!doctype html><html lang=\"zh\"><head><meta charset=\"UTF-8\"></meta><title>")
			w.WriteString(interfaceToStr(scope.Get("title"), true))
			w.WriteString("</title></head><body><h1 style=\"text-align: center; margin-top: 100px; \">")
			w.WriteString(interfaceToStr(scope.Get("title")))
			w.WriteString("</h1>")
			xx_info(r, w, &Options{
				Props: map[string]interface{}{"height": interfaceAdd(scope.Get("height"), 1), "logo": scope.Get("logo"), "name": scope.Get("title"), "slogan": scope.Get("slogan")},
				Style: map[string]string{"padding": "20px"},
				Slots: map[string]NamedSlotFunc{"default": func(w Writer, props Props) {

				}},
				P:     options,
				Scope: scope,
			})
			w.WriteString("<div info> author: " + interfaceToStr(scope.Get("info", "author"), true) + " " + interfaceToStr(scope.Get("info", interfaceToStr(scope.Get("slogan"))), true) + " " + interfaceToStr([]interface{}{scope.Get("slogan")}, true))
			w.WriteString("</div></body></html>")
		}},
		P:     options,
		Scope: scope,
	})
	return
}
