// Code generated by go-vue-ssr: https://github.com/zbysir/go-vue-ssr
// src_hash:c60c5d0d13064ebe6f8544e4c751f912

package tplgo

import (
	"strings"
)

type _ strings.Builder

func (r *Render) Component_vFor(options *Options) string {
	scope := extendScope(r.Global.Scope, options.Props)
	options.Directives.Exec(r, options)
	_ = scope
	return r.tag("div", true, &Options{
		Slot: map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string {
			return func() string {
				var b strings.Builder

				for index, item := range interface2Slice(scope.Get("list")) {
					b.WriteString(func(xscope *Scope) string {
						scope := extendScope(xscope, map[string]interface{}{
							"index": index,
							"item":  item,
						})

						return "<span>" + interfaceToStr(scope.Get("index"), true) + ": " + interfaceToStr(scope.Get("item"), true) + " " + r.Component_slot(&Options{
							Slot:  map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string { return "" }},
							P:     options,
							Scope: scope,
						}) + "</span>"
					}(scope))
				}
				return b.String()
			}()
		}},
		P:     options,
		Scope: scope,
	})
}
