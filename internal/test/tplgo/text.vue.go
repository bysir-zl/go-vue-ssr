// Code generated by go-vue-ssr: https://github.com/zbysir/go-vue-ssr
// src_hash:dcde2cf235753227ec1783373dfc3ead

package tplgo

import (
	"strings"
)

type _ strings.Builder

func (r *Render) Component_text(options *Options) string {
	this := extendMap(r.Prototype, options.Props)
	_ = this
	return r.Tag("div", true, &Options{
		Slot: map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string {
			return func() string {
				var b strings.Builder

				for index, item := range interface2Slice(lookInterface(this, "list")) {
					b.WriteString(func(xdata map[string]interface{}) string {
						this := extendMap(xdata, map[string]interface{}{
							"$index": index,
							"item":   item,
						})

						return "<div>" + r.Component_slot(&Options{
							Props: map[string]interface{}{"msg": lookInterface(this, "item")},
							Attrs: map[string]string{"name": "abc"},
							Slot:  map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string { return "\n        备选slot内容\n      " }},
							P:     options,
							Data:  this,
						}) + r.Component_slot(&Options{
							Attrs: map[string]string{"name": "abcd"},
							Slot:  map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string { return "\n        备选slot abcd内容\n      " }},
							P:     options,
							Data:  this,
						}) + "</div>"
					}(this))
				}
				return b.String()
			}()
		}},
		P:    options,
		Data: this,
	})
}
