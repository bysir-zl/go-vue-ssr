// Code generated by go-vue-ssr: https://github.com/zbysir/go-vue-ssr
// src_hash:e0b78e56502dc106eb551995b94472a2

package tplgo

import (
	"strings"
)

type _ strings.Builder

func (r *Render) Component_directive(options *Options) string {
	scope := extendScope(r.Global.Scope, options.Props)
	options.Directives.Exec(r, options)
	_ = scope
	return r.tag("div", true, &Options{
		Slot: map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string {
			return func() string {
				if interfaceToBool(scope.Get("show")) {
					return r.tag("p", false, &Options{
						Slot: map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string { return "\n        test animate\n      " }},
						P:    options,
						Directives: []directive{
							{Name: "v-animate", Value: map[string]interface{}{"type": "up"}, Arg: ""},
						},
						Scope: scope,
					})
				} else {
					return "\n      !show\n    "
				}
				return ""
			}() + r.tag("p", false, &Options{
				Slot: map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string { return "" }},
				P:    options,
				Directives: []directive{
					{Name: "v-set", Value: map[string]interface{}{"id": scope.Get("id"), "value": map[string]interface{}{"swiper": map[string]interface{}{"speed": scope.Get("speed")}}}, Arg: "swiper"},
				},
				Scope: scope,
			}) + r.tag("p", false, &Options{
				Slot: map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string { return "" }},
				P:    options,
				Directives: []directive{
					{Name: "v-get", Value: nil, Arg: ""},
				},
				Scope: scope,
			}) + "\n    333\n  "
		}},
		P: options,
		Directives: []directive{
			{Name: "v-animate", Value: map[string]interface{}{"time": "5s", "xclass": scope.Get("xclass")}, Arg: ""},
		},
		Scope: scope,
	})
}
