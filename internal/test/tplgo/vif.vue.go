// Code generated by go-vue-ssr: https://github.com/zbysir/go-vue-ssr
// src_hash:2106365aa38b5e17fd74b088dae5c886

package tplgo

import (
	"strings"
)

type _ strings.Builder

func (r *Render) Component_vif(options *Options) string {
	scope := extendScope(r.Global.Scope, options.Props)
	options.Directives.Exec(r, options)
	_ = scope
	return func() string {
		if interfaceToBool(scope.Get("name")) {
			return r.tag("div", true, &Options{
				Props: map[string]interface{}{"a": 1, "html": 1},
				Slot: map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string {
					return "\n    " + interfaceToStr(scope.Get("name"), true) + "\n    " + func() string {
						if interfaceToBool(scope.Get("name2")) {
							return "<div>" + interfaceToStr(scope.Get("name2"), true) + "</div>"
						} else {
							return "<div>123123</div>"
						}
						return ""
					}()
				}},
				P:     options,
				Scope: scope,
			})
		} else if interfaceToBool(scope.Get("name2")) {
			return r.tag("div", true, &Options{
				Slot:  map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string { return " !name AND !name2" }},
				P:     options,
				Scope: scope,
			})
		} else {
			return r.tag("div", true, &Options{
				Slot:  map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string { return " !name AND !name2" }},
				P:     options,
				Scope: scope,
			})
		}
		return ""
	}()
}
