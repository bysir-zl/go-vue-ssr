// Code generated by go-vue-ssr: https://github.com/bysir-zl/go-vue-ssr
// src_hash:3311682e79f07838c8466c2bd7824c14

package tplgo

func (r *Render) Component_vif(options *Options) string {
	this := extendMap(r.Prototype, options.Props)
	_ = this
	return func() string {
		if interfaceToBool(lookInterface(this, "name")) {
			return r.Tag("div", true, &Options{
				Props: map[string]interface{}{"a": 1, "html": 1},
				Slot: map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string {
					return "\n    " + interfaceToStr(lookInterface(this, "name"), true) + "\n    " + func() string {
						if interfaceToBool(lookInterface(this, "name2")) {
							return "<div>" + interfaceToStr(lookInterface(this, "name2"), true) + "</div>"
						} else {
							return "<div>123123</div>"
						}
						return ""
					}()
				}},
				P:    options,
				Data: this,
			})
		} else if interfaceToBool(lookInterface(this, "name2")) {
			return r.Tag("div", true, &Options{
				Slot: map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string { return " !name AND !name2" }},
				P:    options,
				Data: this,
			})
		} else {
			return r.Tag("div", true, &Options{
				Slot: map[string]NamedSlotFunc{"default": func(props map[string]interface{}) string { return " !name AND !name2" }},
				P:    options,
				Data: this,
			})
		}
		return ""
	}()
}
